// using System.Text;
// using Microsoft.CodeAnalysis;
// using Microsoft.CodeAnalysis.CSharp.Syntax;
// using Microsoft.CodeAnalysis.Text;
// using Valigator.SourceGenerator.Utils;
//
// namespace Valigator.SourceGenerator.ValidatorAttributes;
//
// [Generator]
// public class ValidatorAttributesSourceGenerator : IIncrementalGenerator
// {
// 	public void Initialize(IncrementalGeneratorInitializationContext initContext)
// 	{
// 		IncrementalValuesProvider<ValidatorProperties> validatorAttributesToGenerate = initContext
// 			.SyntaxProvider.ForAttributeWithMetadataName(
// 				Consts.ValidatorFullyQualifiedName,
// 				predicate: static (node, _) => node is ClassDeclarationSyntax,
// 				transform: static (ctx, cancellationToken) =>
// 					GetValidatorProperties(ctx.SemanticModel, ctx.TargetNode, cancellationToken)
// 			)
// 			.WhereNotNull();
//
// 		initContext.RegisterSourceOutput(
// 			validatorAttributesToGenerate,
// 			static (sourceProductionContext, validatorProperties) =>
// 				Execute(validatorProperties, sourceProductionContext)
// 		);
// 	}
//
// 	private static ValidatorProperties? GetValidatorProperties(
// 		SemanticModel semanticModel,
// 		SyntaxNode targetNode,
// 		CancellationToken cancellationToken
// 	)
// 	{
// 		if (semanticModel.GetDeclaredSymbol(targetNode, cancellationToken) is not INamedTypeSymbol typeSymbol)
// 		{
// 			return null;
// 		}
//
// 		if (targetNode is not ClassDeclarationSyntax classDeclarationSyntax)
// 		{
// 			return null;
// 		}
//
// 		var usings = classDeclarationSyntax.Parent?.Parent is CompilationUnitSyntax cus ? cus.Usings.ToArray() : [];
//
// 		var ctors = classDeclarationSyntax
// 			.SyntaxTree.GetRoot(cancellationToken)
// 			.DescendantNodes()
// 			.OfType<ConstructorDeclarationSyntax>();
//
// 		return new ValidatorProperties
// 		{
// 			Usings = new EquatableArray<string>(usings.Select(usingSyntax => usingSyntax.ToString()).ToArray()),
// 			Ctors = new EquatableArray<string>(
// 				ctors.Select(ctor => ctor.ParameterList.Parameters.ToString()).ToArray()
// 			),
// 			Name = typeSymbol.Name.Replace("Validator", ""),
// 			ValidatorName = typeSymbol.Name,
// 			Namespace = typeSymbol.ContainingNamespace.ToString(),
// 			// DocComment = typeSymbol.GetDocumentationCommentXml(cancellationToken: cancellationToken),
// 		};
// 	}
//
// 	private static void Execute(ValidatorProperties validatorProperties, SourceProductionContext context)
// 	{
// 		var constructors = validatorProperties.Ctors.Select(ctor =>
// 			$"public {validatorProperties.Name}Attribute({ctor}) {{ }}"
// 		);
//
// 		SourceText sourceText = SourceText.From(
// 			$@"// <auto-generated/>
//
// #pragma warning disable CS0105
// {string.Join("\n", validatorProperties.Usings)}
// #pragma warning restore CS0105
//
// namespace {validatorProperties.Namespace}
// {{
// 	[global::System.AttributeUsage(global::System.AttributeTargets.Property)]
// 	public partial class {validatorProperties.Name}Attribute : global::System.Attribute
//     {{
// 		{string.Join("\n\t\t", constructors)}
//     }}
// }}",
// 			Encoding.UTF8
// 		);
//
// 		context.AddSource($"{validatorProperties.Name}Attribute.g.cs", sourceText);
// 	}
// }
